!function(e){function t(t){for(var r,i,c=t[0],l=t[1],s=t[2],p=0,m=[];p<c.length;p++)i=c[p],o[i]&&m.push(o[i][0]),o[i]=0;for(r in l)Object.prototype.hasOwnProperty.call(l,r)&&(e[r]=l[r]);for(u&&u(t);m.length;)m.shift()();return a.push.apply(a,s||[]),n()}function n(){for(var e,t=0;t<a.length;t++){for(var n=a[t],r=!0,c=1;c<n.length;c++){var l=n[c];0!==o[l]&&(r=!1)}r&&(a.splice(t--,1),e=i(i.s=n[0]))}return e}var r={},o={1:0},a=[];function i(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=e,i.c=r,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)i.d(n,r,function(t){return e[t]}.bind(null,r));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="";var c=window.webpackJsonp=window.webpackJsonp||[],l=c.push.bind(c);c.push=t,c=c.slice();for(var s=0;s<c.length;s++)t(c[s]);var u=l;a.push([20,0]),n()}({20:function(e,t,n){"use strict";n.r(t);var r,o=n(0),a=n(19),i=n(16),c=n(44),l=n(45),s=n(7),u=(n(32),n(31),n(30),n(29),n(28),n(26),n(1)),p=n(17),m=n.n(p),d=(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),f=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return d(t,e),t.prototype.render=function(){return o.createElement("code",{dangerouslySetInnerHTML:{__html:s.highlight(this.props.code,s.languages.tsx)},className:"language-tsx"})},t}(o.Component),h=m()({createElement:o.createElement,highlight:function(e,t){return s.highlight(t,s.languages.tsx)},elements:{table:function(e){var t=e.children;return o.createElement(u.E,{divider:!0},t)}},components:{Accordion:u.a,AccordionItem:u.b,Alert:u.c,Article:u.d,Badge:u.e,Breadcrumb:u.f,Button:u.g,Card:u.h,CardBody:u.i,CardFooter:u.j,CardHeader:u.k,CardTitle:u.l,Code:f,Link:u.s,Tab:u.B,TabContainer:u.C,TabContent:u.D,Cover:u.n,Dark:u.o,Light:u.r,Section:u.z,Flex:u.p}}),g=function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),y=function(e){function t(t){var n=e.call(this,t)||this,r=n.props.match.params,o=r.name,a=r.version;return n.state={name:o,version:a,parsedMarkdown:null,isLoading:!0},n}return g(t,e),t.prototype.componentWillReceiveProps=function(e){var t=this,n=e.match.params,r=n.name,o=n.version;this.state.name!==r&&this.setState({name:r},function(){return t.fetchDocs()}),this.state.version!==o&&this.setState({version:o},function(){return t.fetchDocs()})},t.prototype.shouldComponentUpdate=function(e,t){var n=e.match.params,r=n.name,o=n.version;return this.state.name!==r||(this.state.version!==o||this.state.isLoading!==t.isLoading)},t.prototype.componentDidMount=function(){this.fetchDocs()},t.prototype.render=function(){return o.createElement(u.z,{padding:!0},o.createElement(u.d,{title:this.state.name.charAt(0).toUpperCase()+this.state.name.substr(1)},this.state.parsedMarkdown?this.state.parsedMarkdown.tree:null))},t.prototype.fetchDocs=function(){var e=this;this.setState({isLoading:!0}),console.log(this.state.name),fetch("src/docs/"+this.state.version+"/"+(this.state.name.charAt(0).toUpperCase()+this.state.name.substr(1))+".md").then(function(e){return e.text()}).then(function(t){e.setState({parsedMarkdown:h(t),isLoading:!1})}).catch(function(e){console.error(e)})},t}(o.Component),v={introduction:"Introduction",accordion:"Accordion",alert:"Alert",article:"Article",badge:"Badge",breadcrumb:"Breadcrumb",button:"Button",card:"Card",container:"Container",cover:"Cover",Inverse:"Inverse",dropdown:"Dropdown",flex:"Flex",grid:"Grid",icon:"Icon",image:"Image",labels:"Labels",Lightbox:"Lightbox",link:"Link",list:"List",margin:"Margin",nav:"Nav",navbar:"Navbar",offcanvas:"Offcanvas",overlay:"Overlay",panel:"Panel",parallax:"Parallax",progress:"Progress",scrollspy:"Scrollspy",section:"Section",sidebar:"Sidebar",slideshow:"Slideshow",tab:"Tab",table:"Table"},b=function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),E=function(e){function t(t){var n=e.call(this,t)||this;return n.state={version:"0.0.1"},n}return b(t,e),t.prototype.onVersionChange=function(e){this.setState({version:e.target.value})},t.prototype.render=function(){return o.createElement(u.z,null,o.createElement(u.m,null,o.createElement(u.m,null,o.createElement(u.A,{style:{top:"80px",bottom:"0",boxSizing:"border-box",padding:"40px 40px 60px 40px",borderRight:"1px #e5e5e5 solid",height:"auto",overflow:"auto"},position:"fixed"},o.createElement(u.u,{preset:"default"},this.renderMenu()))),o.createElement(u.m,{size:"1-1",style:{paddingLeft:"220"}},o.createElement(i.a,{path:this.props.match.url+"/:version/:name",component:y}))))},t.prototype.renderMenu=function(){var e=this,t=0;return Object.keys(v).map(function(n){return t++,o.createElement(u.v,{key:n,type:1===t?"divider":null},o.createElement(c.a,{to:"/docs/"+e.state.version+"/"+v[n].toLowerCase()},v[n]))})},t}(o.Component),_=function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),w=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return _(t,e),t.prototype.render=function(){return o.createElement(u.p,{direction:"column"},o.createElement(u.r,null,o.createElement(u.m,{size:"large",type:"image",style:{backgroundImage:'url("src/images/background.svg")',width:"expand",height:"100%"}},o.createElement(u.p,{alignment:"center"},o.createElement("object",{width:"300",height:"300",data:"src/images/uikit-react.svg"})),o.createElement(u.p,{alignment:"center"},o.createElement("h1",null,"UIkit React")),o.createElement(u.p,{alignment:"center"},o.createElement(c.a,{to:"/docs/0.0.1/Introduction"},o.createElement(u.g,{size:"large",color:""},"Get Started"))),o.createElement(u.z,{padding:"small"},o.createElement(u.p,{alignment:"center"},o.createElement("h4",null," Use Uikit with React, a powerfully simple framework "))))))},t}(o.Component),O=function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();document.addEventListener("DOMContentLoaded",function(){console.log(u.z),Object(a.render)(o.createElement(x,null),document.getElementById("root"))},!1);var x=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return O(t,e),t.prototype.render=function(){return o.createElement(l.a,{basename:"/uikit-react"},o.createElement(u.z,{position:"relative"},o.createElement(u.z,{color:"secondary",preserveColor:!0},o.createElement(u.y,{options:"animation: uk-animation-slide-top; cls-inactive: uk-navbar-transparent uk-light; top: 556;"},o.createElement(u.x,null,o.createElement(u.w,{align:"left"},o.createElement(u.t,{padding:"small"},o.createElement("a",{href:"/"},o.createElement("img",{width:"200",height:"200",src:"src/images/uikit-react-simple-text.svg"})))),o.createElement(u.w,{align:"right"},o.createElement(u.t,null,o.createElement(c.a,{to:"/docs/0.0.1/Introduction"},o.createElement(u.g,{size:"small"},"Documentation"))),o.createElement(u.t,null,o.createElement(u.s,null,"Changelog")),o.createElement(u.t,null,o.createElement(u.s,{ClasName:"test",href:"https://github.com/vacarsu/uikit-react"},o.createElement(u.q,{options:"github",button:!0}))))))),o.createElement(i.a,{exact:!0,path:"/",component:w}),o.createElement(i.a,{path:"/docs",component:E})))},t}(o.Component)}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL0RvY3MvY29kZS50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL0RvY3MvbWFya3N5LWNvbXBvbmVudHMudHN4Iiwid2VicGFjazovLy8uL3NyYy9wYWdlcy9Eb2NzL0RvY3VtZW50YXRpb24udHN4Iiwid2VicGFjazovLy8uL3NyYy9wYWdlcy9Eb2NzL2RvY3MtbmF2LnRzIiwid2VicGFjazovLy8uL3NyYy9wYWdlcy9Eb2NzL0RvY3NQYWdlLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvSW5kZXgvSW5kZXhQYWdlLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvYXBwLnRzeCJdLCJuYW1lcyI6WyJ3ZWJwYWNrSnNvbnBDYWxsYmFjayIsImRhdGEiLCJtb2R1bGVJZCIsImNodW5rSWQiLCJjaHVua0lkcyIsIm1vcmVNb2R1bGVzIiwiZXhlY3V0ZU1vZHVsZXMiLCJpIiwicmVzb2x2ZXMiLCJsZW5ndGgiLCJpbnN0YWxsZWRDaHVua3MiLCJwdXNoIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwibW9kdWxlcyIsInBhcmVudEpzb25wRnVuY3Rpb24iLCJzaGlmdCIsImRlZmVycmVkTW9kdWxlcyIsImFwcGx5IiwiY2hlY2tEZWZlcnJlZE1vZHVsZXMiLCJyZXN1bHQiLCJkZWZlcnJlZE1vZHVsZSIsImZ1bGZpbGxlZCIsImoiLCJkZXBJZCIsInNwbGljZSIsIl9fd2VicGFja19yZXF1aXJlX18iLCJzIiwiaW5zdGFsbGVkTW9kdWxlcyIsIjEiLCJleHBvcnRzIiwibW9kdWxlIiwibCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwIiwianNvbnBBcnJheSIsIndpbmRvdyIsIm9sZEpzb25wRnVuY3Rpb24iLCJzbGljZSIsImNvZGVfQ29kZSIsIl9zdXBlciIsIkNvZGUiLCJfX2V4dGVuZHMiLCJyZW5kZXIiLCJyZWFjdCIsImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIiwiX19odG1sIiwicHJpc20iLCJ0aGlzIiwicHJvcHMiLCJjb2RlIiwidHN4IiwiY2xhc3NOYW1lIiwiY29tcGlsZSIsImNvbXBvbmVudHNfZGVmYXVsdCIsImNyZWF0ZUVsZW1lbnQiLCJoaWdobGlnaHQiLCJsYW5ndWFnZSIsImVsZW1lbnRzIiwidGFibGUiLCJfYSIsImNoaWxkcmVuIiwidWlraXRfcmVhY3QiLCJkaXZpZGVyIiwiY29tcG9uZW50cyIsIkFjY29yZGlvbiIsIkFjY29yZGlvbkl0ZW0iLCJBbGVydCIsIkFydGljbGUiLCJCYWRnZSIsIkJyZWFkY3J1bWIiLCJCdXR0b24iLCJDYXJkIiwiQ2FyZEJvZHkiLCJDYXJkRm9vdGVyIiwiQ2FyZEhlYWRlciIsIkNhcmRUaXRsZSIsIkxpbmsiLCJUYWIiLCJUYWJDb250YWluZXIiLCJUYWJDb250ZW50IiwiQ292ZXIiLCJEYXJrIiwiTGlnaHQiLCJTZWN0aW9uIiwiRmxleCIsIkRvY3VtZW50YXRpb25fRG9jdW1lbnRhdGlvbiIsIkRvY3VtZW50YXRpb24iLCJfdGhpcyIsIm1hdGNoIiwicGFyYW1zIiwidmVyc2lvbiIsInN0YXRlIiwicGFyc2VkTWFya2Rvd24iLCJpc0xvYWRpbmciLCJEb2N1bWVudGF0aW9uX2V4dGVuZHMiLCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwibmV4dFByb3BzIiwic2V0U3RhdGUiLCJmZXRjaERvY3MiLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJuZXh0U3RhdGUiLCJjb21wb25lbnREaWRNb3VudCIsInBhZGRpbmciLCJ0aXRsZSIsImNoYXJBdCIsInRvVXBwZXJDYXNlIiwic3Vic3RyIiwidHJlZSIsImNvbnNvbGUiLCJsb2ciLCJmZXRjaCIsInRoZW4iLCJyZXMiLCJ0ZXh0IiwiY2F0Y2giLCJlcnIiLCJlcnJvciIsImRvY3NOYXYiLCJpbnRyb2R1Y3Rpb24iLCJhY2NvcmRpb24iLCJhbGVydCIsImFydGljbGUiLCJiYWRnZSIsImJyZWFkY3J1bWIiLCJidXR0b24iLCJjYXJkIiwiY29udGFpbmVyIiwiY292ZXIiLCJJbnZlcnNlIiwiZHJvcGRvd24iLCJmbGV4IiwiZ3JpZCIsImljb24iLCJpbWFnZSIsImxhYmVscyIsIkxpZ2h0Ym94IiwibGluayIsImxpc3QiLCJtYXJnaW4iLCJuYXYiLCJuYXZiYXIiLCJvZmZjYW52YXMiLCJvdmVybGF5IiwicGFuZWwiLCJwYXJhbGxheCIsInByb2dyZXNzIiwic2Nyb2xsc3B5Iiwic2VjdGlvbiIsInNpZGViYXIiLCJzbGlkZXNob3ciLCJ0YWIiLCJEb2NzUGFnZV9Eb2NzUGFnZSIsIkRvY3NQYWdlIiwiRG9jc1BhZ2VfZXh0ZW5kcyIsIm9uVmVyc2lvbkNoYW5nZSIsImV2ZW50IiwidGFyZ2V0Iiwic3R5bGUiLCJ0b3AiLCJib3R0b20iLCJib3hTaXppbmciLCJib3JkZXJSaWdodCIsImhlaWdodCIsIm92ZXJmbG93IiwicG9zaXRpb24iLCJwcmVzZXQiLCJyZW5kZXJNZW51Iiwic2l6ZSIsInBhZGRpbmdMZWZ0IiwiUm91dGUiLCJwYXRoIiwidXJsIiwiY29tcG9uZW50IiwiY291bnQiLCJrZXlzIiwibWFwIiwiayIsInR5cGUiLCJOYXZMaW5rIiwidG8iLCJ0b0xvd2VyQ2FzZSIsIkluZGV4UGFnZV9JbmRleFBhZ2UiLCJJbmRleFBhZ2UiLCJJbmRleFBhZ2VfZXh0ZW5kcyIsImRpcmVjdGlvbiIsImJhY2tncm91bmRJbWFnZSIsIndpZHRoIiwiYWxpZ25tZW50IiwiY29sb3IiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZWFjdF9kb20iLCJhcHBfRXhhbXBsZVBhZ2UiLCJnZXRFbGVtZW50QnlJZCIsIkV4YW1wbGVQYWdlIiwiYXBwX2V4dGVuZHMiLCJCcm93c2VyUm91dGVyIiwiYmFzZW5hbWUiLCJwcmVzZXJ2ZUNvbG9yIiwib3B0aW9ucyIsImFsaWduIiwiaHJlZiIsInNyYyIsIkNsYXNOYW1lIiwiZXhhY3QiXSwibWFwcGluZ3MiOiJhQUNBLFNBQUFBLEVBQUFDLEdBUUEsSUFQQSxJQU1BQyxFQUFBQyxFQU5BQyxFQUFBSCxFQUFBLEdBQ0FJLEVBQUFKLEVBQUEsR0FDQUssRUFBQUwsRUFBQSxHQUlBTSxFQUFBLEVBQUFDLEtBQ1FELEVBQUFILEVBQUFLLE9BQW9CRixJQUM1QkosRUFBQUMsRUFBQUcsR0FDQUcsRUFBQVAsSUFDQUssRUFBQUcsS0FBQUQsRUFBQVAsR0FBQSxJQUVBTyxFQUFBUCxHQUFBLEVBRUEsSUFBQUQsS0FBQUcsRUFDQU8sT0FBQUMsVUFBQUMsZUFBQUMsS0FBQVYsRUFBQUgsS0FDQWMsRUFBQWQsR0FBQUcsRUFBQUgsSUFLQSxJQUZBZSxLQUFBaEIsR0FFQU8sRUFBQUMsUUFDQUQsRUFBQVUsT0FBQVYsR0FPQSxPQUhBVyxFQUFBUixLQUFBUyxNQUFBRCxFQUFBYixPQUdBZSxJQUVBLFNBQUFBLElBRUEsSUFEQSxJQUFBQyxFQUNBZixFQUFBLEVBQWlCQSxFQUFBWSxFQUFBVixPQUE0QkYsSUFBQSxDQUc3QyxJQUZBLElBQUFnQixFQUFBSixFQUFBWixHQUNBaUIsR0FBQSxFQUNBQyxFQUFBLEVBQWtCQSxFQUFBRixFQUFBZCxPQUEyQmdCLElBQUEsQ0FDN0MsSUFBQUMsRUFBQUgsRUFBQUUsR0FDQSxJQUFBZixFQUFBZ0IsS0FBQUYsR0FBQSxHQUVBQSxJQUNBTCxFQUFBUSxPQUFBcEIsSUFBQSxHQUNBZSxFQUFBTSxJQUFBQyxFQUFBTixFQUFBLEtBR0EsT0FBQUQsRUFJQSxJQUFBUSxLQUtBcEIsR0FDQXFCLEVBQUEsR0FHQVosS0FHQSxTQUFBUyxFQUFBMUIsR0FHQSxHQUFBNEIsRUFBQTVCLEdBQ0EsT0FBQTRCLEVBQUE1QixHQUFBOEIsUUFHQSxJQUFBQyxFQUFBSCxFQUFBNUIs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LmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gaW5zdGFsbCBhIEpTT05QIGNhbGxiYWNrIGZvciBjaHVuayBsb2FkaW5nXG4gXHRmdW5jdGlvbiB3ZWJwYWNrSnNvbnBDYWxsYmFjayhkYXRhKSB7XG4gXHRcdHZhciBjaHVua0lkcyA9IGRhdGFbMF07XG4gXHRcdHZhciBtb3JlTW9kdWxlcyA9IGRhdGFbMV07XG4gXHRcdHZhciBleGVjdXRlTW9kdWxlcyA9IGRhdGFbMl07XG5cbiBcdFx0Ly8gYWRkIFwibW9yZU1vZHVsZXNcIiB0byB0aGUgbW9kdWxlcyBvYmplY3QsXG4gXHRcdC8vIHRoZW4gZmxhZyBhbGwgXCJjaHVua0lkc1wiIGFzIGxvYWRlZCBhbmQgZmlyZSBjYWxsYmFja1xuIFx0XHR2YXIgbW9kdWxlSWQsIGNodW5rSWQsIGkgPSAwLCByZXNvbHZlcyA9IFtdO1xuIFx0XHRmb3IoO2kgPCBjaHVua0lkcy5sZW5ndGg7IGkrKykge1xuIFx0XHRcdGNodW5rSWQgPSBjaHVua0lkc1tpXTtcbiBcdFx0XHRpZihpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0pIHtcbiBcdFx0XHRcdHJlc29sdmVzLnB1c2goaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdWzBdKTtcbiBcdFx0XHR9XG4gXHRcdFx0aW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdID0gMDtcbiBcdFx0fVxuIFx0XHRmb3IobW9kdWxlSWQgaW4gbW9yZU1vZHVsZXMpIHtcbiBcdFx0XHRpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9yZU1vZHVsZXMsIG1vZHVsZUlkKSkge1xuIFx0XHRcdFx0bW9kdWxlc1ttb2R1bGVJZF0gPSBtb3JlTW9kdWxlc1ttb2R1bGVJZF07XG4gXHRcdFx0fVxuIFx0XHR9XG4gXHRcdGlmKHBhcmVudEpzb25wRnVuY3Rpb24pIHBhcmVudEpzb25wRnVuY3Rpb24oZGF0YSk7XG5cbiBcdFx0d2hpbGUocmVzb2x2ZXMubGVuZ3RoKSB7XG4gXHRcdFx0cmVzb2x2ZXMuc2hpZnQoKSgpO1xuIFx0XHR9XG5cbiBcdFx0Ly8gYWRkIGVudHJ5IG1vZHVsZXMgZnJvbSBsb2FkZWQgY2h1bmsgdG8gZGVmZXJyZWQgbGlzdFxuIFx0XHRkZWZlcnJlZE1vZHVsZXMucHVzaC5hcHBseShkZWZlcnJlZE1vZHVsZXMsIGV4ZWN1dGVNb2R1bGVzIHx8IFtdKTtcblxuIFx0XHQvLyBydW4gZGVmZXJyZWQgbW9kdWxlcyB3aGVuIGFsbCBjaHVua3MgcmVhZHlcbiBcdFx0cmV0dXJuIGNoZWNrRGVmZXJyZWRNb2R1bGVzKCk7XG4gXHR9O1xuIFx0ZnVuY3Rpb24gY2hlY2tEZWZlcnJlZE1vZHVsZXMoKSB7XG4gXHRcdHZhciByZXN1bHQ7XG4gXHRcdGZvcih2YXIgaSA9IDA7IGkgPCBkZWZlcnJlZE1vZHVsZXMubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHR2YXIgZGVmZXJyZWRNb2R1bGUgPSBkZWZlcnJlZE1vZHVsZXNbaV07XG4gXHRcdFx0dmFyIGZ1bGZpbGxlZCA9IHRydWU7XG4gXHRcdFx0Zm9yKHZhciBqID0gMTsgaiA8IGRlZmVycmVkTW9kdWxlLmxlbmd0aDsgaisrKSB7XG4gXHRcdFx0XHR2YXIgZGVwSWQgPSBkZWZlcnJlZE1vZHVsZVtqXTtcbiBcdFx0XHRcdGlmKGluc3RhbGxlZENodW5rc1tkZXBJZF0gIT09IDApIGZ1bGZpbGxlZCA9IGZhbHNlO1xuIFx0XHRcdH1cbiBcdFx0XHRpZihmdWxmaWxsZWQpIHtcbiBcdFx0XHRcdGRlZmVycmVkTW9kdWxlcy5zcGxpY2UoaS0tLCAxKTtcbiBcdFx0XHRcdHJlc3VsdCA9IF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gZGVmZXJyZWRNb2R1bGVbMF0pO1xuIFx0XHRcdH1cbiBcdFx0fVxuIFx0XHRyZXR1cm4gcmVzdWx0O1xuIFx0fVxuXG4gXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuIFx0Ly8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4gXHQvLyBQcm9taXNlID0gY2h1bmsgbG9hZGluZywgMCA9IGNodW5rIGxvYWRlZFxuIFx0dmFyIGluc3RhbGxlZENodW5rcyA9IHtcbiBcdFx0MTogMFxuIFx0fTtcblxuIFx0dmFyIGRlZmVycmVkTW9kdWxlcyA9IFtdO1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG4gXHR2YXIganNvbnBBcnJheSA9IHdpbmRvd1tcIndlYnBhY2tKc29ucFwiXSA9IHdpbmRvd1tcIndlYnBhY2tKc29ucFwiXSB8fCBbXTtcbiBcdHZhciBvbGRKc29ucEZ1bmN0aW9uID0ganNvbnBBcnJheS5wdXNoLmJpbmQoanNvbnBBcnJheSk7XG4gXHRqc29ucEFycmF5LnB1c2ggPSB3ZWJwYWNrSnNvbnBDYWxsYmFjaztcbiBcdGpzb25wQXJyYXkgPSBqc29ucEFycmF5LnNsaWNlKCk7XG4gXHRmb3IodmFyIGkgPSAwOyBpIDwganNvbnBBcnJheS5sZW5ndGg7IGkrKykgd2VicGFja0pzb25wQ2FsbGJhY2soanNvbnBBcnJheVtpXSk7XG4gXHR2YXIgcGFyZW50SnNvbnBGdW5jdGlvbiA9IG9sZEpzb25wRnVuY3Rpb247XG5cblxuIFx0Ly8gYWRkIGVudHJ5IG1vZHVsZSB0byBkZWZlcnJlZCBsaXN0XG4gXHRkZWZlcnJlZE1vZHVsZXMucHVzaChbMjAsMF0pO1xuIFx0Ly8gcnVuIGRlZmVycmVkIG1vZHVsZXMgd2hlbiByZWFkeVxuIFx0cmV0dXJuIGNoZWNrRGVmZXJyZWRNb2R1bGVzKCk7XG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgKiBhcyBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20vc2VydmVyJztcbmltcG9ydCAqIGFzIFByaXNtIGZyb20gJ3ByaXNtanMnO1xuXG5leHBvcnQgY2xhc3MgQ29kZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxhbnksIGFueT4ge1xuICAgIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxjb2RlXG4gICAgICAgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBQcmlzbS5oaWdobGlnaHQodGhpcy5wcm9wcy5jb2RlLCBQcmlzbS5sYW5ndWFnZXMudHN4KSB9fVxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImxhbmd1YWdlLXRzeFwiPlxuICAgICAgICAgICAgPC9jb2RlPlxuICAgICAgICApO1xuICAgIH1cbn0iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgKiBhcyBQcmlzbSBmcm9tICdwcmlzbWpzJztcbmltcG9ydCB7IGVzY2FwZSB9IGZyb20gJ2hlJztcbmltcG9ydCBtYXJrc3kgZnJvbSAnbWFya3N5L2NvbXBvbmVudHMnO1xuaW1wb3J0IHtcbiAgICBBY2NvcmRpb24sXG4gICAgQWNjb3JkaW9uSXRlbSxcbiAgICBBbGVydCxcbiAgICBBcnRpY2xlLFxuICAgIEJhZGdlLFxuICAgIEJyZWFkY3J1bWIsXG4gICAgQnV0dG9uLFxuICAgIENhcmQsXG4gICAgQ2FyZEJvZHksXG4gICAgQ2FyZEZvb3RlcixcbiAgICBDYXJkSGVhZGVyLFxuICAgIENhcmRUaXRsZSxcbiAgICBMaW5rLFxuICAgIFRhYixcbiAgICBUYWJDb250YWluZXIsXG4gICAgVGFiQ29udGVudCxcbiAgICBUYWJsZSxcbiAgICBDb3ZlcixcbiAgICBEYXJrLFxuICAgIExpZ2h0LFxuICAgIFNlY3Rpb24sXG4gICAgRmxleCxcbn0gZnJvbSAndWlraXQtcmVhY3QnO1xuaW1wb3J0IHsgQ29kZSB9IGZyb20gJy4vY29kZSc7XG5cbmV4cG9ydCBjb25zdCBjb21waWxlID0gbWFya3N5KHtcbiAgICBjcmVhdGVFbGVtZW50OiBSZWFjdC5jcmVhdGVFbGVtZW50LFxuICAgIGhpZ2hsaWdodChsYW5ndWFnZSwgY29kZSkge1xuICAgICAgICByZXR1cm4gUHJpc20uaGlnaGxpZ2h0KGNvZGUsIFByaXNtLmxhbmd1YWdlcy50c3gpO1xuICAgIH0sXG4gICAgZWxlbWVudHM6IHtcbiAgICAgICAgdGFibGUoe2NoaWxkcmVufSkge1xuICAgICAgICAgICAgcmV0dXJuIDxUYWJsZSBkaXZpZGVyPntjaGlsZHJlbn08L1RhYmxlPlxuICAgICAgICB9XG4gICAgfSxcbiAgICBjb21wb25lbnRzOiB7XG4gICAgICAgIEFjY29yZGlvbixcbiAgICAgICAgQWNjb3JkaW9uSXRlbSxcbiAgICAgICAgQWxlcnQsXG4gICAgICAgIEFydGljbGUsXG4gICAgICAgIEJhZGdlLFxuICAgICAgICBCcmVhZGNydW1iLFxuICAgICAgICBCdXR0b24sXG4gICAgICAgIENhcmQsXG4gICAgICAgIENhcmRCb2R5LFxuICAgICAgICBDYXJkRm9vdGVyLFxuICAgICAgICBDYXJkSGVhZGVyLFxuICAgICAgICBDYXJkVGl0bGUsXG4gICAgICAgIENvZGUsXG4gICAgICAgIExpbmssXG4gICAgICAgIFRhYixcbiAgICAgICAgVGFiQ29udGFpbmVyLFxuICAgICAgICBUYWJDb250ZW50LFxuICAgICAgICBDb3ZlcixcbiAgICAgICAgRGFyayxcbiAgICAgICAgTGlnaHQsXG4gICAgICAgIFNlY3Rpb24sXG4gICAgICAgIEZsZXgsXG4gICAgfVxufSk7IiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0ICogYXMgUHJpc20gZnJvbSAncHJpc21qcyc7XG5pbXBvcnQgKiBhcyBtYXJrZWQgZnJvbSAnbWFya2VkJztcbmltcG9ydCB7IFJvdXRlLCBOYXZMaW5rIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5pbXBvcnQgeyBNYXJrZG93biB9IGZyb20gJy4vcGFyc2UtbWFya2Rvd24nO1xuaW1wb3J0IHsgY29tcGlsZSB9IGZyb20gJy4vbWFya3N5LWNvbXBvbmVudHMnO1xuaW1wb3J0IHtcbiAgICBBcnRpY2xlLFxuICAgIENvbnRhaW5lcixcbiAgICBGbGV4LFxuICAgIExpc3QsXG4gICAgTGlzdEl0ZW0sXG4gICAgTmF2LFxuICAgIE5hdkl0ZW0sXG4gICAgU2VjdGlvbixcbiAgICBTaWRlYmFyXG59IGZyb20gJ3Vpa2l0LXJlYWN0JztcblxuZXhwb3J0IGNsYXNzIERvY3VtZW50YXRpb24gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQ8YW55LCBhbnk+IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIGNvbnN0IHsgbmFtZSwgdmVyc2lvbiB9ID0gdGhpcy5wcm9wcy5tYXRjaC5wYXJhbXM7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBuYW1lOiBuYW1lLFxuICAgICAgICAgICAgdmVyc2lvbjogdmVyc2lvbixcbiAgICAgICAgICAgIHBhcnNlZE1hcmtkb3duOiBudWxsLFxuICAgICAgICAgICAgaXNMb2FkaW5nOiB0cnVlXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgICAgY29uc3QgeyBuYW1lLCB2ZXJzaW9uIH0gPSBuZXh0UHJvcHMubWF0Y2gucGFyYW1zO1xuICAgICAgICBpZiAodGhpcy5zdGF0ZS5uYW1lICE9PSBuYW1lKSB7XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICBuYW1lOiBuYW1lXG4gICAgICAgICAgICB9LCAoKSA9PiB0aGlzLmZldGNoRG9jcygpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLnN0YXRlLnZlcnNpb24gIT09IHZlcnNpb24pIHtcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgIHZlcnNpb246IHZlcnNpb25cbiAgICAgICAgICAgIH0sICgpID0+IHRoaXMuZmV0Y2hEb2NzKCkpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgc2hvdWxkQ29tcG9uZW50VXBkYXRlKG5leHRQcm9wcywgbmV4dFN0YXRlKTogYm9vbGVhbiB7XG4gICAgICAgIGNvbnN0IHsgbmFtZSwgdmVyc2lvbiB9ID0gbmV4dFByb3BzLm1hdGNoLnBhcmFtcztcbiAgICAgICAgaWYgKHRoaXMuc3RhdGUubmFtZSAhPT0gbmFtZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5zdGF0ZS52ZXJzaW9uICE9PSB2ZXJzaW9uKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLnN0YXRlLmlzTG9hZGluZyAhPT0gbmV4dFN0YXRlLmlzTG9hZGluZykge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICAgIHRoaXMuZmV0Y2hEb2NzKCk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPFNlY3Rpb24gcGFkZGluZz5cbiAgICAgICAgICAgICAgICA8QXJ0aWNsZSB0aXRsZT17dGhpcy5zdGF0ZS5uYW1lLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgdGhpcy5zdGF0ZS5uYW1lLnN1YnN0cigxKX0+XG4gICAgICAgICAgICAgICAgICAgIHt0aGlzLnN0YXRlLnBhcnNlZE1hcmtkb3duID8gdGhpcy5zdGF0ZS5wYXJzZWRNYXJrZG93bi50cmVlIDogbnVsbH1cbiAgICAgICAgICAgICAgICA8L0FydGljbGU+XG4gICAgICAgICAgICA8L1NlY3Rpb24+XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBmZXRjaERvY3MoKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyBpc0xvYWRpbmc6IHRydWUgfSk7XG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMuc3RhdGUubmFtZSk7XG4gICAgICAgIGZldGNoKGBzcmMvZG9jcy8ke3RoaXMuc3RhdGUudmVyc2lvbn0vJHt0aGlzLnN0YXRlLm5hbWUuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyB0aGlzLnN0YXRlLm5hbWUuc3Vic3RyKDEpfS5tZGApXG4gICAgICAgICAgICAudGhlbigocmVzKSA9PiByZXMudGV4dCgpKVxuICAgICAgICAgICAgLnRoZW4odGV4dCA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgIHBhcnNlZE1hcmtkb3duOiBjb21waWxlKHRleHQpLFxuICAgICAgICAgICAgICAgICAgICBpc0xvYWRpbmc6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgICAgICAgICB9KTtcbiAgICB9XG59IiwiZXhwb3J0IGNvbnN0IGRvY3NOYXYgPSB7XG4gICAgaW50cm9kdWN0aW9uOiAnSW50cm9kdWN0aW9uJyxcbiAgICBhY2NvcmRpb246ICdBY2NvcmRpb24nLFxuICAgIGFsZXJ0OiAnQWxlcnQnLFxuICAgIGFydGljbGU6ICdBcnRpY2xlJyxcbiAgICBiYWRnZTogJ0JhZGdlJyxcbiAgICBicmVhZGNydW1iOiAnQnJlYWRjcnVtYicsXG4gICAgYnV0dG9uOiAnQnV0dG9uJyxcbiAgICBjYXJkOiAnQ2FyZCcsXG4gICAgY29udGFpbmVyOiAnQ29udGFpbmVyJyxcbiAgICBjb3ZlcjogJ0NvdmVyJyxcbiAgICBJbnZlcnNlOiAnSW52ZXJzZScsXG4gICAgZHJvcGRvd246ICdEcm9wZG93bicsXG4gICAgZmxleDogJ0ZsZXgnLFxuICAgIGdyaWQ6ICdHcmlkJyxcbiAgICBpY29uOiAnSWNvbicsXG4gICAgaW1hZ2U6ICdJbWFnZScsXG4gICAgbGFiZWxzOiAnTGFiZWxzJyxcbiAgICBMaWdodGJveDogJ0xpZ2h0Ym94JyxcbiAgICBsaW5rOiAnTGluaycsXG4gICAgbGlzdDogJ0xpc3QnLFxuICAgIG1hcmdpbjogJ01hcmdpbicsXG4gICAgbmF2OiAnTmF2JyxcbiAgICBuYXZiYXI6ICdOYXZiYXInLFxuICAgIG9mZmNhbnZhczogJ09mZmNhbnZhcycsXG4gICAgb3ZlcmxheTogJ092ZXJsYXknLFxuICAgIHBhbmVsOiAnUGFuZWwnLFxuICAgIHBhcmFsbGF4OiAnUGFyYWxsYXgnLFxuICAgIHByb2dyZXNzOiAnUHJvZ3Jlc3MnLFxuICAgIHNjcm9sbHNweTogJ1Njcm9sbHNweScsXG4gICAgc2VjdGlvbjogJ1NlY3Rpb24nLFxuICAgIHNpZGViYXI6ICdTaWRlYmFyJyxcbiAgICBzbGlkZXNob3c6ICdTbGlkZXNob3cnLFxuICAgIHRhYjogJ1RhYicsXG4gICAgdGFibGU6ICdUYWJsZSdcbn0iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBSb3V0ZSwgTmF2TGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuXG5pbXBvcnQge1xuICAgIENvbnRhaW5lcixcbiAgICBGbGV4LFxuICAgIEZvcm0sXG4gICAgSW5wdXRDb250YWluZXIsXG4gICAgTGFiZWwsXG4gICAgU2VsZWN0LFxuICAgIFNlbGVjdE9wdGlvbixcbiAgICBMaXN0LFxuICAgIExpc3RJdGVtLFxuICAgIE5hdixcbiAgICBOYXZJdGVtLFxuICAgIFNlY3Rpb24sXG4gICAgU2lkZWJhclxufSBmcm9tICd1aWtpdC1yZWFjdCc7XG5cbmltcG9ydCB7IERvY3VtZW50YXRpb24gfSBmcm9tICcuL0RvY3VtZW50YXRpb24nO1xuaW1wb3J0IHsgZG9jc05hdiB9IGZyb20gJy4vZG9jcy1uYXYnO1xuXG5leHBvcnQgY2xhc3MgRG9jc1BhZ2UgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQ8YW55LCBhbnk+IHtcbiAgICBjb25zdHJ1Y3RvciAocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0geyB2ZXJzaW9uOiAnMC4wLjEnIH07XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBvblZlcnNpb25DaGFuZ2UoZXZlbnQpIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICB2ZXJzaW9uOiBldmVudC50YXJnZXQudmFsdWVcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPFNlY3Rpb24+XG4gICAgICAgICAgICAgICAgPENvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICAgICAgPENvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxTaWRlYmFyIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogJzgwcHgnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3R0b206ICcwJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYm94U2l6aW5nOiAnYm9yZGVyLWJveCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6ICc0MHB4IDQwcHggNjBweCA0MHB4JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyUmlnaHQ6ICcxcHggI2U1ZTVlNSBzb2xpZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogJ2F1dG8nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyZmxvdzogJ2F1dG8nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbj1cImZpeGVkXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPE5hdiBwcmVzZXQ9XCJkZWZhdWx0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsvKiA8TmF2SXRlbT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxGb3JtPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxJbnB1dENvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPExhYmVsIGh0bWxGb3I9XCJ2ZXJzaW9uXCI+VmVyc2lvbjwvTGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxTZWxlY3RcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkPVwidmVyc2lvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17dGhpcy5zdGF0ZS52ZXJzaW9ufVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMub25WZXJzaW9uQ2hhbmdlLmJpbmQodGhpcyl9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPFNlbGVjdE9wdGlvbiB2YWx1ZT1cIjAuMC4xXCI+MC4wLjE8L1NlbGVjdE9wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxTZWxlY3RPcHRpb24gdmFsdWU9XCIwLjAuMlwiPjAuMC4yPC9TZWxlY3RPcHRpb24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvU2VsZWN0PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvSW5wdXRDb250YWluZXI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0Zvcm0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTmF2SXRlbT4gKi99XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLnJlbmRlck1lbnUoKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L05hdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvU2lkZWJhcj5cbiAgICAgICAgICAgICAgICAgICAgPC9Db250YWluZXI+XG4gICAgICAgICAgICAgICAgICAgIDxDb250YWluZXIgc2l6ZT1cIjEtMVwiIHN0eWxlPXt7IHBhZGRpbmdMZWZ0OiAnMjIwJyB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxSb3V0ZSBwYXRoPXtgJHt0aGlzLnByb3BzLm1hdGNoLnVybH0vOnZlcnNpb24vOm5hbWVgfSBjb21wb25lbnQ9e0RvY3VtZW50YXRpb259IC8+XG4gICAgICAgICAgICAgICAgICAgIDwvQ29udGFpbmVyPlxuICAgICAgICAgICAgICAgIDwvQ29udGFpbmVyPlxuICAgICAgICAgICAgPC9TZWN0aW9uPlxuICAgICAgICApO1xuICAgIH1cblxuICAgIHByaXZhdGUgcmVuZGVyTWVudSgpIHtcbiAgICAgICAgbGV0IGNvdW50ID0gMDtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKGRvY3NOYXYpLm1hcCgoaykgPT4ge1xuICAgICAgICAgICAgY291bnQrKztcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPE5hdkl0ZW0ga2V5PXtrfSB0eXBlPXtjb3VudCA9PT0gMSA/IFwiZGl2aWRlclwiIDogbnVsbH0+XG4gICAgICAgICAgICAgICAgICAgIDxOYXZMaW5rIHRvPXtgL2RvY3MvJHt0aGlzLnN0YXRlLnZlcnNpb259LyR7ZG9jc05hdltrXS50b0xvd2VyQ2FzZSgpfWB9Pntkb2NzTmF2W2tdfTwvTmF2TGluaz5cbiAgICAgICAgICAgICAgICA8L05hdkl0ZW0+XG4gICAgICAgICAgICApO1xuICAgICAgICB9KTtcbiAgICB9XG59IiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQnJvd3NlclJvdXRlciBhcyBSb3V0ZXIsIFJvdXRlLCBOYXZMaW5rIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5pbXBvcnQgeyBEb2NzUGFnZSB9IGZyb20gJy4uLy4uL3BhZ2VzL0RvY3MvRG9jc1BhZ2UnO1xuXG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tICd1aWtpdC1yZWFjdCc7XG5pbXBvcnQgeyBDb250YWluZXIgfSBmcm9tICd1aWtpdC1yZWFjdCc7XG5pbXBvcnQgeyBGbGV4IH0gZnJvbSAndWlraXQtcmVhY3QnO1xuaW1wb3J0IHsgTGlnaHQgfSBmcm9tICd1aWtpdC1yZWFjdCc7XG5pbXBvcnQgeyBMaXN0IH0gZnJvbSAndWlraXQtcmVhY3QnO1xuaW1wb3J0IHsgTGlzdEl0ZW0gfSBmcm9tICd1aWtpdC1yZWFjdCc7XG5pbXBvcnQgeyBTZWN0aW9uIH0gZnJvbSAndWlraXQtcmVhY3QnO1xuaW1wb3J0IHsgSW1hZ2UgfSBmcm9tICd1aWtpdC1yZWFjdCc7XG5pbXBvcnQgeyBEYXJrIH0gZnJvbSAndWlraXQtcmVhY3QnO1xuaW1wb3J0IHsgTGluayB9IGZyb20gJ3Vpa2l0LXJlYWN0JztcbmltcG9ydCB7IEljb24gfSBmcm9tICd1aWtpdC1yZWFjdCc7XG5pbXBvcnQgeyBDb3ZlciB9IGZyb20gJ3Vpa2l0LXJlYWN0JztcbmltcG9ydCB7IE5hdmJhciB9IGZyb20gJ3Vpa2l0LXJlYWN0JztcblxuZXhwb3J0IGNsYXNzIEluZGV4UGFnZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPEZsZXggZGlyZWN0aW9uPVwiY29sdW1uXCIgID5cbiAgICAgICAgICAgICAgICA8TGlnaHQ+XG4gICAgICAgICAgICAgICAgICAgIDxDb250YWluZXIgc2l6ZT1cImxhcmdlXCIgdHlwZT1cImltYWdlXCIgc3R5bGU9e3sgYmFja2dyb3VuZEltYWdlOiAndXJsKFwic3JjL2ltYWdlcy9iYWNrZ3JvdW5kLnN2Z1wiKScsIHdpZHRoOiBcImV4cGFuZFwiLCBoZWlnaHQ6XCIxMDAlXCJ9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxGbGV4IGFsaWdubWVudD1cImNlbnRlclwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvYmplY3Qgd2lkdGg9XCIzMDBcIiBoZWlnaHQ9XCIzMDBcIiBkYXRhPVwic3JjL2ltYWdlcy91aWtpdC1yZWFjdC5zdmdcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9GbGV4PlxuICAgICAgICAgICAgICAgICAgICAgICAgPEZsZXggYWxpZ25tZW50PVwiY2VudGVyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aDE+VUlraXQgUmVhY3Q8L2gxPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9GbGV4PlxuICAgICAgICAgICAgICAgICAgICAgICAgPEZsZXggYWxpZ25tZW50PVwiY2VudGVyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPE5hdkxpbmsgdG89XCIvZG9jcy8wLjAuMS9JbnRyb2R1Y3Rpb25cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBzaXplPVwibGFyZ2VcIiBjb2xvcj1cIlwiPkdldCBTdGFydGVkPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9OYXZMaW5rPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9GbGV4PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxTZWN0aW9uIHBhZGRpbmc9XCJzbWFsbFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RmxleCBhbGlnbm1lbnQ9XCJjZW50ZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoND4gVXNlIFVpa2l0IHdpdGggUmVhY3QsIGEgcG93ZXJmdWxseSBzaW1wbGUgZnJhbWV3b3JrIDwvaDQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvRmxleD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1NlY3Rpb24+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L0NvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICA8L0xpZ2h0PlxuICAgICAgICAgICAgPC9GbGV4PlxuICAgICAgICApO1xuICAgIH1cbn1cbiIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHJlbmRlciB9IGZyb20gJ3JlYWN0LWRvbSc7XG5pbXBvcnQgeyBCcm93c2VyUm91dGVyIGFzIFJvdXRlciwgUm91dGUsIE5hdkxpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbmltcG9ydCAncHJpc21qcyc7XG5pbXBvcnQgJ3ByaXNtanMvY29tcG9uZW50cy9wcmlzbS1qYXZhc2NyaXB0Lm1pbic7XG5pbXBvcnQgJ3ByaXNtanMvY29tcG9uZW50cy9wcmlzbS1qc3gubWluJztcbmltcG9ydCAncHJpc21qcy9jb21wb25lbnRzL3ByaXNtLXRzeC5taW4nO1xuaW1wb3J0ICdwcmlzbWpzL3BsdWdpbnMvdG9vbGJhci9wcmlzbS10b29sYmFyJztcbmltcG9ydCAncHJpc21qcy9wbHVnaW5zL2NvcHktdG8tY2xpcGJvYXJkL3ByaXNtLWNvcHktdG8tY2xpcGJvYXJkJztcbmltcG9ydCAncHJpc21qcy9jb21wb25lbnRzL3ByaXNtLWNzcy5taW4nO1xuXG5pbXBvcnQge1xuICAgIENvbnRhaW5lcixcbiAgICBMaWdodCxcbiAgICBJY29uLFxuICAgIExpbmssXG4gICAgTGlzdCxcbiAgICBMaXN0SXRlbSxcbiAgICBPZmZjYW52YXMsXG4gICAgT2ZmY2FudmFzQ29udGFpbmVyLFxuICAgIE5hdmJhcixcbiAgICBOYXZiYXJDb250YWluZXIsXG4gICAgTmF2YmFyU3RpY2t5LFxuICAgIFNlY3Rpb24sXG4gICAgRmxleCxcbiAgICBCdXR0b24sXG5cbiAgICBcbn0gZnJvbSAndWlraXQtcmVhY3QnO1xuXG5cbmltcG9ydCB7IERvY3NQYWdlIH0gZnJvbSAnLi9wYWdlcy9Eb2NzL0RvY3NQYWdlJztcbmltcG9ydCB7IEluZGV4UGFnZSB9IGZyb20gJy4vcGFnZXMvSW5kZXgvSW5kZXhQYWdlJztcblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsICgpID0+IHtcbiAgICBjb25zb2xlLmxvZyhTZWN0aW9uKTtcbiAgICByZW5kZXIoXG4gICAgICAgIDxFeGFtcGxlUGFnZSAvPixcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jvb3QnKVxuICAgICk7XG59LCBmYWxzZSk7XG5cbmNsYXNzIEV4YW1wbGVQYWdlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PGFueSwgYW55PiB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gKFxuXG4gICAgICAgICAgICAgICAgPFJvdXRlciBiYXNlbmFtZT1cIi91aWtpdC1yZWFjdFwiPlxuICAgICAgICAgICAgICAgICAgICA8U2VjdGlvbiBwb3NpdGlvbj1cInJlbGF0aXZlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8U2VjdGlvbiBjb2xvcj1cInNlY29uZGFyeVwiIHByZXNlcnZlQ29sb3I+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPE5hdmJhclN0aWNreSBvcHRpb25zPVwiYW5pbWF0aW9uOiB1ay1hbmltYXRpb24tc2xpZGUtdG9wOyBjbHMtaW5hY3RpdmU6IHVrLW5hdmJhci10cmFuc3BhcmVudCB1ay1saWdodDsgdG9wOiA1NTY7XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxOYXZiYXJDb250YWluZXI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8TmF2YmFyIGFsaWduPVwibGVmdFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxMaXN0SXRlbSBwYWRkaW5nPVwic21hbGxcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCIvXCI+PGltZyB3aWR0aD1cIjIwMFwiIGhlaWdodD1cIjIwMFwiIHNyYz1cInNyYy9pbWFnZXMvdWlraXQtcmVhY3Qtc2ltcGxlLXRleHQuc3ZnXCIvPjwvYT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0xpc3RJdGVtPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9OYXZiYXI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8TmF2YmFyIGFsaWduPVwicmlnaHRcIiA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxMaXN0SXRlbT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxOYXZMaW5rIHRvPVwiL2RvY3MvMC4wLjEvSW50cm9kdWN0aW9uXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBzaXplPVwic21hbGxcIj5Eb2N1bWVudGF0aW9uPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L05hdkxpbms+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTGlzdEl0ZW0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxMaXN0SXRlbT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxMaW5rPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENoYW5nZWxvZ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0xpc3RJdGVtPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8TGlzdEl0ZW0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxMaW5rIENsYXNOYW1lPVwidGVzdFwiIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vdmFjYXJzdS91aWtpdC1yZWFjdFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEljb24gb3B0aW9ucz1cImdpdGh1YlwiIGJ1dHRvbiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9MaXN0SXRlbT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTmF2YmFyPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L05hdmJhckNvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L05hdmJhclN0aWNreT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvU2VjdGlvbj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPFJvdXRlIGV4YWN0IHBhdGg9XCIvXCIgY29tcG9uZW50PXtJbmRleFBhZ2V9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Um91dGUgcGF0aD1cIi9kb2NzXCIgY29tcG9uZW50PXtEb2NzUGFnZX0gLz5cbiAgICAgICAgICAgICAgICAgICAgPC9TZWN0aW9uPlxuICAgICAgICAgICAgICAgIDwvUm91dGVyPlxuXG4gICAgICAgIClcbiAgICB9XG59Il0sInNvdXJjZVJvb3QiOiIifQ==